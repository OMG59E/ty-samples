cmake_minimum_required(VERSION 2.8.12)
project(dcl_wrapper C CXX)

set(SDK_PATH $ENV{DENGINE_ROOT}/tyhcp)
set(COMMON_COMPILER_FLAG "-w -fPIC")

if (NOT "${HOST_TYPE}" STREQUAL "x86")
    set(CMAKE_CXX_COMPILER $ENV{ARM_CXX_COMPILER})
    set(CMAKE_C_COMPILER $ENV{ARM_C_COMPILER})
    set(COMMON_COMPILER_FLAG "${COMMON_COMPILER_FLAG} $ENV{ARM_CXX_FLAGS}")
endif()

if (${CMAKE_BUILD_TYPE} STREQUAL "Debug")
    set(CMAKE_CXX_FLAGS "-O0 -g -std=c++11 ${COMMON_COMPILER_FLAG} ${CMAKE_CXX_FLAGS}")
else()
    set(CMAKE_CXX_FLAGS "-O2 -std=c++11 ${COMMON_COMPILER_FLAG} ${CMAKE_CXX_FLAGS}")
endif()

if (NOT "${HOST_TYPE}" STREQUAL "x86")
    set(SDK_LIB_PATH ${SDK_PATH}/${HOST_TYPE}/$ENV{CROSS_PLAT}/lib)
    set(OPENCV_PATH $ENV{DENGINE_ROOT}/tyhcp/${HOST_TYPE}/$ENV{CROSS_PLAT}/3rdparty/opencv)
else()
    set(SDK_LIB_PATH ${SDK_PATH}/simu/$ENV{HOST_PLAT}/lib)
    set(OPENCV_PATH /usr/local)
endif()

include_directories(src/graph/include)
include_directories(src/common)
include_directories(src/utils)
include_directories(src)
include_directories(${SDK_PATH}/include/hcp)
include_directories(${OPENCV_PATH}/include)

link_directories(${SDK_LIB_PATH})
link_directories(${OPENCV_PATH}/lib)

add_subdirectory(src)
add_subdirectory(examples)

list(APPEND SDK_LIBS ty_common)
list(APPEND SDK_LIBS ty_dcl)
list(APPEND SDK_LIBS ty_drv)
list(APPEND SDK_LIBS ty_drv_memory)
list(APPEND SDK_LIBS ty_drv_vmm)
list(APPEND SDK_LIBS ty_ge)
list(APPEND SDK_LIBS ty_stream_sched)
list(APPEND SDK_LIBS ty_syslink)
list(APPEND SDK_LIBS ty_utils)
if (NOT "${HOST_TYPE}" STREQUAL "x86")
    list(APPEND SDK_LIBS ty_drv_boxdma_umd)
    list(APPEND SDK_LIBS ty_drv_cr_umd)
    list(APPEND SDK_LIBS ty_drv_kcf_umd)
    list(APPEND SDK_LIBS ty_drv_nnp_umd)
    list(APPEND SDK_LIBS ty_dsmi_device)
    list(APPEND SDK_LIBS hal_device)
    list(APPEND SDK_LIBS ipcm)
    list(APPEND SDK_LIBS mal)
    list(APPEND SDK_LIBS ddrpm)
else()
    list(APPEND SDK_LIBS ty_drv_nnp_simu)
    list(APPEND SDK_LIBS ty_model_wrap)
    list(APPEND SDK_LIBS nnp_iss)
    list(APPEND SDK_LIBS zmq)
    list(APPEND SDK_LIBS ty_drv_ive_simu)
    list(APPEND SDK_LIBS ty_drv_media_simu)
endif()

list(APPEND OPENCV_LIBS opencv_core)
list(APPEND OPENCV_LIBS opencv_imgproc)
list(APPEND OPENCV_LIBS opencv_imgcodecs)

add_library(${PROJECT_NAME} SHARED ${DCL_SOURCES})

target_link_libraries(${PROJECT_NAME} ${SDK_LIBS} ${OPENCV_LIBS} pthread dl)

foreach(EXAMPLE_NAME ${EXAMPLE_SOURCES})
    #unpack the dir "/"
    string(REPLACE "/" ";" SEXY_LIST ${EXAMPLE_NAME})
    list(GET SEXY_LIST -1 TEST_CASE_NAME)
    #get the file name without suffix
    string(REPLACE "." ";" SEXY_LIST ${TEST_CASE_NAME})
    list(GET SEXY_LIST 0 TEST_CASE_NAME)
    add_executable(${TEST_CASE_NAME} ${EXAMPLE_NAME})
    target_link_libraries(${TEST_CASE_NAME} ${PROJECT_NAME})
    set_target_properties(${TEST_CASE_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY .)
endforeach()
